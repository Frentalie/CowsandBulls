import java.util.HashSet;
import java.util.Random;
import java.util.Scanner;
import java.util.Set;

public class CowsandBulls {
	public static final String ANSI_RESET = "\u001B[0m";
	public static final String ANSI_RED = "\u001B[31m";
	public static final String ANSI_GREEN = "\u001B[32m";

	public static void main(String[] args) throws InterruptedException {
		Scanner scn = new Scanner(System.in);
		Random dice = new Random();
		String guess = null;
		boolean correct = false;
		boolean exception;
		int[] AsBs = new int[2];
		int[] code = new int[4];
		int[] digits = new int[4];
		int counter = 0;
		String[] madeguesses = new String[500];// because I doubt anyone would
												// take more than 500 guesses.
		int[][] AsBsguesses = new int[2][500];
		int howmanyguesses = 0;
		Set<Integer> nums = new HashSet<Integer>();
		int rnum;
		@SuppressWarnings("unused")
		int numberguess;
		for (int x = 0; x <= 3; x++) {
			do {
				rnum = dice.nextInt(10);
			} while (nums.contains(rnum));
			code[x] = rnum;
			nums.add(rnum);
		}

		System.out.println("                        Welcome to Cows and Bulls!");
		System.out.println("==========================================================================");
		Thread.sleep(700);
		System.out.println("             Your target is to try and guess a random four-digit\n "
				+ "                 combination that is generated by the CPU");
		System.out.println();
		System.out.println("                                      Good Luck!");
		System.out.println("==========================================================================");
		Thread.sleep(2500);
		System.out.print("\033[H\033[2J");
		System.out.println(ANSI_GREEN + "Generating Number..." + ANSI_RESET);
		Thread.sleep(1500);
		System.out.println(ANSI_GREEN + "Number Generated!" + ANSI_RESET);
		Thread.sleep(500);
		while (!correct) {
			AsBs[0] = 0;
			AsBs[1] = 0;
			do {
				try {
					do {
						System.out.println("==============================");
						System.out.println(ANSI_GREEN + "Guesses: " + howmanyguesses + ANSI_RESET);
						System.out.println("==============================");
						System.out.println("Make your guess!");
						System.out.println("==============================");
						System.out.println(ANSI_GREEN + "Guesses made so far:" + ANSI_RESET);
						try {
							for (int a = 0; a <= counter; a++)
								if (madeguesses[a] != null) {
									System.out.print(madeguesses[a]);
									System.out.printf(" || A:%d, B:%d%n", AsBsguesses[0][a], AsBsguesses[1][a]);// fix!!
								}
						} catch (ArrayIndexOutOfBoundsException e) {
							Thread.sleep(1500);
							System.out.print("\033[H\033[2J");
						}
						System.out.println("==============================");
						guess = scn.next();
						if (guess.length() != 4)
							System.out.println(ANSI_RED + "That's not four digits!" + ANSI_RESET);
					} while (guess.length() != 4);
					exception = false;
					numberguess = Integer.valueOf(guess);
				} catch (NumberFormatException e) {
					exception = true;
					System.out.println(ANSI_RED + "Invalid Option!" + ANSI_RESET);
				}
			} while (exception);
			madeguesses[counter] = guess;
			for (int z = 0; z <= 3; z++) {
				digits[z] = Character.getNumericValue(guess.charAt(z));
				if (digits[z] == code[z]) {
					++AsBs[0];
				} else {
					for (int y = 0; y <= 3; y++) {
						if (digits[z] == code[y]) {
							++AsBs[1];
						}

					}
				}
			}
			Thread.sleep(200);
			if (AsBs[0] != 4) {
				System.out.println("==================");
				System.out.printf(ANSI_RED + "A: %d As!%n" + ANSI_RESET, AsBs[0]);
				AsBsguesses[0][counter] = AsBs[0];
				System.out.printf(ANSI_RED + "B: %d Bs!%n" + ANSI_RESET, AsBs[1]);
				AsBsguesses[1][counter] = AsBs[1];
				System.out.println("==================");
				howmanyguesses++;
			} else {
				System.out.println(ANSI_GREEN + "Congrats! You got the number!" + ANSI_RESET);
				correct = true;
			}
			counter++;
		}
		scn.close();

	}
}
